///////////////////////////////////////////////////////////////////////////////
//                                    HEADER
///////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////
// LOGO
.logo {
  height: 3.5rem;
  margin-left: 2rem;
}

//////////////////////////////////////////
// SEARCH
.search {
  flex: 0 0 40%; // don't grow, don't shrink, occupy 40% of the header

  display: flex; // Nested flexbox: search flex item is becoming also a flex container
  justify-content: center;  // align flex items in the main axis
  align-items: center;      // align flex items in the cross axis

  &__input {
    font-family: inherit; // <input> doesn't inherit the font-family of global document
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: .7rem 2rem;
    border-radius: 100px; // a high number for the rounded edges
    width: 90%;           // 90% of parent element (search)
    transition: all .2s;
    margin-right: -3.2rem; // for the button to move on top of the input

    &:focus {
      width: 100%;         // make input bigger when on focus
      outline: none;       // remove the focus style
      background-color: var(--color-grey-light-3); // darker
    }

    &::-webkit-input-placeholder { 
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  &__button {
    border: none;
    background-color: transparent; 

    &:focus {
      outline: none;  
    }

    &:active {
      transform: translateY(2px); // move button down when we click on it
    }
  }

  // NOT needed thanks to 'background-color: transparent' for the button  
  // &__input:focus + &__button {  // select adjacent sibling when the input is focused
  //   background-color: var(--color-grey-light-3);
  // }
  
  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3)
  }
}


//////////////////////////////////////////
// USER NAVIGATION
.user-nav {
  align-self: stretch; // override the align-items: center (of the header)

  display: flex; // Nested flexbox (2nd level): user-nav flex item also a flex container 
  align-items: center; // align user-nav flex items in the cross axis

  // target all the 'user.nav' direct children (icon-box, icon-box, user)
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;  // make the hover go all the way from the top to the bottom

    display: flex; // Nested flexbox (3rd level): icon-box + user flex items also flex containers
    align-items: center; // align icon-box + user flex items in the cross axis
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2); // change color of svg icon
  }

  &__notification {
    font-size: .8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #fff;
    position: absolute; // to position 'notification' exactly where we want it
      top: 1.5rem;
      right: 1.1rem;

    display: flex; // Nested flexbox (4th level): notification flex item also a flex container
    justify-content: center; // center notification flex items on the main axis
    align-items: center;     // center notificationflex items on the cross axis
  }

  &__user {
    
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}


///////////////////////////////////////////////////////////////////////////////
//                              CONTENT - SIDEBAR
///////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////
// SIDE-NAV
.side-nav {
  font-size: 1.4rem;
  list-style: none; 
  margin-top: 3.5rem;

  // ITEM (<li>)
  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: .5rem;
    }
  }

  &__item::before { // Place elements before each list item for the hover effect
    content: '';    // always define content for a pseudo-element
    background-color: var(--color-primary);
    position: absolute;
      top: 0;
      left: 0;
    height: 100%;   // we want the same height as the list item
      
    width: 3px;
    transform: scaleY(0);       // in the normal state (without any hover)
    transform-origin: center;   // default value
    transition: transform .2s,  // animates 3 properties
                width .4s cubic-bezier(1, 0, 0 , 1) .2s,
                background-color .1s;
  }

  &__item:hover::before,
  &__item--active::before {
    transform: scaleY(1); // scales in the Y axis 
    width: 100%;          // to expand it in the X axis
  }

  &__item:active::before { // when we click it, set the color a bit brighter
    background-color: var(--color-primary-light);
  }


  // LINK (<a>)
  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    padding: 1.5rem 3rem;

    //display: block;
    display: flex;
    align-items: center; // center its flex items in the cross axis

    z-index: 10;         // links on top of the ::before pseudo element
    position: relative;  // z-index only works if we specify a position 
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    margin-right: 2rem;
    fill: currentColor; // change color of svg icon
  }
}

//////////////////////////////////////////
// LEGAL
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;
}